pipeline {
  agent any

  tools {
    maven 'M2_HOME'
  }
  
  stages {
    stage('CheckOut') {
      steps {
        echo 'Checking out the source code from GitHub...'
        git branch: 'main', url: 'https://github.com/ShivashankarareddyBA/insurenceproject.git'
      }
    }
    
    stage('Package the Application') {
      steps {
        echo "Packaging the Application..."
        sh 'mvn clean package'
      }
    }
    
    stage('Publish Reports using HTML') {
      steps {
        publishHTML([
          allowMissing: false, 
          alwaysLinkToLastBuild: false, 
          keepAll: false, 
          reportDir: "${pwd()}/target/surefire-reports", 
          reportFiles: 'index.html', 
          reportName: 'HTML Report', 
          reportTitles: '', 
          useWrapperFileDirectly: true
        ])
      }
    }
    
    stage('Docker Image Creation') {
      steps {
        echo "Building Docker Image..."
        sh 'docker build -t shivareddy24/insureproject:latest .'
      }
    }

    stage('Docker Login') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'Docker-Hub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
          sh '''
            echo "Logging in to Docker Hub..."
            docker login -u $dockerHubUser -p $dockerHubPassword
          '''
        }
      }
    }

    stage('Push Image to DockerHub') {
      steps {
        echo "Pushing Docker Image to DockerHub..."
        sh 'docker push shivareddy24/insureproject:latest'
      }
    }

    stage('Deploy Application using Ansible') {
      steps {
        echo "Deploying Application using Ansible..."
        ansiblePlaybook(
          credentialsId: 'private-key', 
          disableHostKeyChecking: true, 
          installation: 'ansible', 
          inventory: '/etc/ansible/hosts', 
          playbook: 'deploy.yml'
        )
      }
    }
  }

  post {
    success {
      echo 'Pipeline executed successfully!'
    }
    failure {
      echo 'Pipeline failed. Please check the logs!'
    }
  }
}
